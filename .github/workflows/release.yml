# ref: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
name: release

on:
  push:
    branches:
      - main

jobs:
  checks-test:
    uses: ./.github/workflows/build.yml
  build:
    name: Build distribution üì¶
    needs:
      - checks-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Setup Yarn
        run: |
          corepack enable
          corepack prepare yarn@4.6.0 --activate
          echo 'nodeLinker: node-modules' > .yarnrc.yml

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
          python -m pip install -U codecov
          yarn --version
          yarn config set nodeLinker node-modules
          YARN_ENABLE_IMMUTABLE_INSTALLS=false yarn install

      - name: Install package
        run: |
          python -m pip install --upgrade -v -e ".[test, examples, docs]"

      - name: Build a binary wheel and a source tarball
        run: python -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: |
            dist/*.whl
            dist/*.tar.gz
  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/net-vis
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
  github-release:
    name: Sign the Python üêç distribution üì¶ with Sigstore and upload them to GitHub Release
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # Only upload Python packages and their signatures/certificates.
        run: >-
          gh release upload
          "$GITHUB_REF_NAME" dist/*.whl dist/*.tar.gz dist/*.sigstore dist/sha256sum.txt*
          --repo "$GITHUB_REPOSITORY"

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
      - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/net-vis

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Publish distribution üì¶ to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          packages-dir: dist/
